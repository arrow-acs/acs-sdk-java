jar.doFirst {
    from sourceSets.main.allSource
    manifest {
        attributes(
            "Implementation-Title": "Arrow Cloud Services (ACS) - Client",
            "Implementation-Version": version,
            "Implementation-Vendor": "Arrow Electronics, Inc.",
            "Built-By": System.getProperty('user.name'),
            "Built-Date": new Date().format("yyyy-MM-dd"),
            "Built-Jdk": "${System.getProperty('java.version')} (${System.getProperty('java.specification.vendor')})",
            "Git-Branch": getCurrentGitBranch(),
            "Git-Last-Commit": getLastGitCommit())
    }
}

def jarToCopy = copySpec {
    from "build/libs/${jar.archiveName}"
}

task copyJar(dependsOn: jar) {
    doLast {
        copy {
            with jarToCopy
            into "../../lib"
        }
        copy {
            with jarToCopy
            into "../../acn-sdk-java/lib"
        }
        copy {
            with jarToCopy
            into "../../acs-app-java/lib"
        }
        copy {
            with jarToCopy
            into "../../pegasus/pegasus-core/lib"
        }
        copy {
            with jarToCopy
            into "../../kronos/lib"
        }
        copy {
            with jarToCopy
            into "../../rhea/lib"
        }
        copy {
            with jarToCopy
            into "../../selene/lib"
        }
        copy {
            with jarToCopy
            into "../../hyperion/lib"
        }
        copy {
            with jarToCopy
            into "../../apollo/lib"
        }
    }
}

task jenkinsOutput() {
    doLast {
        copy {
            with jarToCopy
            into "/data1/jenkins/workspace/global-libs"
        }
    }
}

task jenkinsBuild(type: GradleBuild) {
    tasks = ['jar', 'jenkinsOutput']
}
